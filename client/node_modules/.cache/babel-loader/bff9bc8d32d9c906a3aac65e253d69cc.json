{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mbds\\\\Desktop\\\\Restaurants-Oualid\\\\client\\\\src\\\\components\\\\table\\\\simple_table.js\";\nimport React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MaterialTable from \"material-table\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nclass SimpleTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      titre: \"\",\n      columns: [{\n        title: \"Nom\",\n        field: \"name\"\n      }, {\n        title: \"Cuisine\",\n        field: \"cuisine\"\n      }, {\n        title: \"City \",\n        field: \"borough\"\n      }],\n      rowsPerPage: 10,\n      indexPage: 0\n    };\n  }\n\n  setPageSize(event, newpagesize) {\n    this.state.rowsPerPage = parseInt(newpagesize.key); // this.setState({ rowsPerPage: parseInt(newpagesize.key) });\n\n    console.log(\"Venant du tableau \" + parseInt(newpagesize.key));\n    console.log(\"Venant du tableau \" + this.state.rowsPerPage);\n    this.props.parrentCallbackPageSize(this.state.rowsPerPage);\n  }\n\n  setIndexPage(event, index) {\n    console.log(index);\n    this.setState({\n      indexPage: index\n    });\n    this.props.parrentCallbackIndexPage(index);\n  }\n\n  search(searchChild) {\n    this.props.parrentCallbackSearch(searchChild);\n  }\n\n  addRestaurant(restaurantACild) {\n    this.props.parrentCallbackAdd(restaurantACild);\n  }\n\n  deleteRestaurant(restaurantSChild) {\n    this.props.parrentCallbackDel(restaurantSChild);\n  }\n\n  modifRestaurant(oldrestaurantMChild, newrestaurantMChild) {\n    this.props.parrentCallbackMod(oldrestaurantMChild, newrestaurantMChild);\n  }\n\n  render() {\n    return React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      style: {\n        width: 1200\n      },\n      title: this.props.titre,\n      columns: this.state.columns,\n      data: this.props.data,\n      options: {\n        search: true,\n        exportButton: false,\n        paging: false\n      },\n      onSearchChange: search => this.search(search),\n      editable: {\n        onRowAdd: newData => new Promise(resolve => {\n          resolve();\n          console.log(newData);\n          this.addRestaurant(newData);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          resolve();\n          this.modifRestaurant(oldData, newData);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          resolve();\n          this.deleteRestaurant(oldData);\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25, 50, 100],\n      component: \"div\",\n      count: this.props.nbRestaurant,\n      rowsPerPage: this.state.rowsPerPage,\n      page: this.state.indexPage,\n      backIconButtonProps: {\n        \"aria-label\": \"previous page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"next page\"\n      },\n      onChangeRowsPerPage: (e, v) => this.setPageSize(e, v),\n      onChangePage: (e, v) => this.setIndexPage(e, v),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SimpleTable;","map":{"version":3,"sources":["C:\\Users\\mbds\\Desktop\\Restaurants-Oualid\\client\\src\\components\\table\\simple_table.js"],"names":["React","Component","Paper","MaterialTable","TablePagination","SimpleTable","constructor","props","state","titre","columns","title","field","rowsPerPage","indexPage","setPageSize","event","newpagesize","parseInt","key","console","log","parrentCallbackPageSize","setIndexPage","index","setState","parrentCallbackIndexPage","search","searchChild","parrentCallbackSearch","addRestaurant","restaurantACild","parrentCallbackAdd","deleteRestaurant","restaurantSChild","parrentCallbackDel","modifRestaurant","oldrestaurantMChild","newrestaurantMChild","parrentCallbackMod","render","width","data","exportButton","paging","onRowAdd","newData","Promise","resolve","onRowUpdate","oldData","onRowDelete","nbRestaurant","e","v"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MaterialTable from \"material-table\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nclass SimpleTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      titre: \"\",\n      columns: [\n        { title: \"Nom\", field: \"name\" },\n        { title: \"Cuisine\", field: \"cuisine\" },\n        { title: \"City \", field: \"borough\" }\n      ],\n      rowsPerPage: 10,\n      indexPage: 0\n    };\n  }\n  setPageSize(event, newpagesize) {\n    this.state.rowsPerPage = parseInt(newpagesize.key);\n    // this.setState({ rowsPerPage: parseInt(newpagesize.key) });\n    console.log(\"Venant du tableau \" + parseInt(newpagesize.key));\n    console.log(\"Venant du tableau \" + this.state.rowsPerPage);\n    this.props.parrentCallbackPageSize(this.state.rowsPerPage);\n  }\n  setIndexPage(event, index) {\n    console.log(index);\n    this.setState({ indexPage: index });\n    this.props.parrentCallbackIndexPage(index);\n  }\n\n  search(searchChild) {\n    this.props.parrentCallbackSearch(searchChild);\n  }\n  addRestaurant(restaurantACild) {\n    this.props.parrentCallbackAdd(restaurantACild);\n  }\n  deleteRestaurant(restaurantSChild) {\n    this.props.parrentCallbackDel(restaurantSChild);\n  }\n  modifRestaurant(oldrestaurantMChild, newrestaurantMChild) {\n    this.props.parrentCallbackMod(oldrestaurantMChild, newrestaurantMChild);\n  }\n\n  render() {\n    return (\n      <Paper>\n        <div>\n          <MaterialTable\n            style={{ width: 1200 }}\n            title={this.props.titre}\n            columns={this.state.columns}\n            data={this.props.data}\n            options={{\n              search: true,\n              exportButton: false,\n              paging: false\n            }}\n            onSearchChange={search => this.search(search)}\n            editable={{\n              onRowAdd: newData =>\n                new Promise(resolve => {\n                  resolve();\n                  console.log(newData);\n                  this.addRestaurant(newData);\n                }),\n              onRowUpdate: (newData, oldData) =>\n                new Promise(resolve => {\n                  resolve();\n                  this.modifRestaurant(oldData, newData);\n                }),\n              onRowDelete: oldData =>\n                new Promise(resolve => {\n                  resolve();\n                  this.deleteRestaurant(oldData);\n                })\n            }}\n          />\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          component=\"div\"\n          count={this.props.nbRestaurant}\n          rowsPerPage={this.state.rowsPerPage}\n          page={this.state.indexPage}\n          backIconButtonProps={{\n            \"aria-label\": \"previous page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"next page\"\n          }}\n          onChangeRowsPerPage={(e, v) => this.setPageSize(e, v)}\n          onChangePage={(e, v) => this.setIndexPage(e, v)}\n        />\n      </Paper>\n    );\n  }\n}\nexport default SimpleTable;\n"]},"metadata":{},"sourceType":"module"}